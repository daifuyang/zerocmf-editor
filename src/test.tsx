/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

// setupEnv must load before App because lexical computes CAN_USE_BEFORE_INPUT
// at import time (disableBeforeInput is used to test legacy events)
/* import App from '../dist/index.es';
import '../dist/index.css'; */

import Render from "./index";
// import '../es/index.css';

export default function Index() {
  let value: any = localStorage.getItem("html");
  if (value == "") {
    value = `<h1 class="zerocmf-editor-h1" style="text-align:start"><span style="white-space:pre-wrap">快速入门（Vanilla JS）</span></h1><p class="zerocmf-editor-paragraph" style="text-align:start"><span style="white-space:pre-wrap">本节介绍如何独立于任何框架或库使用 Lexical。对于那些打算在 React 应用程序中使用 Lexical 的人，建议</span><a href="https://lexical.dev/docs/getting-started/react" target="_blank" rel="noopener noreferrer" class="zerocmf-editor-link"><span style="white-space:pre-wrap">查看 React 入门页面</span></a><span style="white-space:pre-wrap">。</span></p><h3 class="zerocmf-editor-h3" style="text-align:start"><span style="white-space:pre-wrap">创建编辑器并使用</span><a href="https://lexical.dev/docs/getting-started/quick-start#creating-an-editor-and-using-it" class="zerocmf-editor-link"><span style="white-space:pre-wrap">它</span></a></h3><p class="zerocmf-editor-paragraph" style="text-align:start"><span style="white-space:pre-wrap">使用 Lexical 时，您通常会使用单个编辑器实例。编辑器实例可以被视为负责</span><code style="white-space:pre-wrap"><span class="zerocmf-editor-textCode">EditorState</span></code><span style="white-space:pre-wrap">与 DOM 连接的实例。编辑器也是您可以注册自定义节点、添加侦听器和转换的地方。</span></p><p class="zerocmf-editor-paragraph" style="text-align:start"><span style="white-space:pre-wrap">可以从包中创建一个编辑器实例</span><code style="white-space:pre-wrap"><span class="zerocmf-editor-textCode">lexical</span></code><span style="white-space:pre-wrap">，并接受允许主题和其他选项的可选配置对象：</span></p><pre class="zerocmf-editor-code"><span class="zerocmf-editor-tokenAttr" style="white-space:pre-wrap">import</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">{</span><span style="white-space:pre-wrap">createEditor</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">}</span><span class="zerocmf-editor-tokenAttr" style="white-space:pre-wrap">from</span><span class="zerocmf-editor-tokenSelector" style="white-space:pre-wrap">'lexical'</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">;</span><br /><br /><span class="zerocmf-editor-tokenAttr" style="white-space:pre-wrap">const</span><span style="white-space:pre-wrap"> config </span><span class="zerocmf-editor-tokenOperator" style="white-space:pre-wrap">=</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">{</span><br /><span style="white-space:pre-wrap">namespace</span><span class="zerocmf-editor-tokenOperator" style="white-space:pre-wrap">:</span><span class="zerocmf-editor-tokenSelector" style="white-space:pre-wrap">'MyEditor'</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">,</span><br /><span style="white-space:pre-wrap">theme</span><span class="zerocmf-editor-tokenOperator" style="white-space:pre-wrap">:</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">{</span><br /><span class="zerocmf-editor-tokenOperator" style="white-space:pre-wrap">...</span><br /><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">}</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">,</span><br /><span style="white-space:pre-wrap">onError</span><span class="zerocmf-editor-tokenOperator" style="white-space:pre-wrap">:</span><span style="white-space:pre-wrap"> console</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">.</span><span style="white-space:pre-wrap">error</span><br /><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">}</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">;</span><br /><br /><span class="zerocmf-editor-tokenAttr" style="white-space:pre-wrap">const</span><span style="white-space:pre-wrap"> editor </span><span class="zerocmf-editor-tokenOperator" style="white-space:pre-wrap">=</span><span class="zerocmf-editor-tokenFunction" style="white-space:pre-wrap">createEditor</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">(</span><span style="white-space:pre-wrap">config</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">)</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">;</span></pre><p class="zerocmf-editor-paragraph" style="text-align:start"><span style="white-space:pre-wrap">一旦您有了编辑器实例，当准备就绪时，您可以将编辑器实例与</span><code style="white-space:pre-wrap"><span class="zerocmf-editor-textCode">&lt;div&gt;</span></code><span style="white-space:pre-wrap">文档中的内容可编辑元素关联起来：</span></p><pre class="zerocmf-editor-code"><span class="zerocmf-editor-tokenAttr" style="white-space:pre-wrap">const</span><span style="white-space:pre-wrap"> contentEditableElement </span><span class="zerocmf-editor-tokenOperator" style="white-space:pre-wrap">=</span><span style="white-space:pre-wrap"> document</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">.</span><span class="zerocmf-editor-tokenFunction" style="white-space:pre-wrap">getElementById</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">(</span><span class="zerocmf-editor-tokenSelector" style="white-space:pre-wrap">'editor'</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">)</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">;</span><br /><br /><span style="white-space:pre-wrap">editor</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">.</span><span class="zerocmf-editor-tokenFunction" style="white-space:pre-wrap">setRootElement</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">(</span><span style="white-space:pre-wrap">contentEditableElement</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">)</span><span class="zerocmf-editor-tokenPunctuation" style="white-space:pre-wrap">;</span></pre><p class="zerocmf-editor-paragraph" style="text-align:start"><span style="white-space:pre-wrap">如果要从元素中清除编辑器实例，可以传递</span><code style="white-space:pre-wrap"><span class="zerocmf-editor-textCode">null</span></code><span style="white-space:pre-wrap">。或者，如果需要，您可以切换到另一个元素，只需将替代元素引用传递给</span><code style="white-space:pre-wrap"><span class="zerocmf-editor-textCode">setRootElement()</span></code><span style="white-space:pre-wrap">。</span></p>`;
  }
  return (
    <Render
      value={value}
      onChange={(html) => {
        // console.log("onChange", html);
        if (html) {
          localStorage.setItem("html", html);
        }
      }}
    />
  );
}
